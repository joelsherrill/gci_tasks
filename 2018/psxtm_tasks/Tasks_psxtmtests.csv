|| Create POSIX Timing Test psxtmonce01 (13-#1) || This task consists of creating the timing test testsuites/psxtmtests/psxtmonce01 for the POSIX API method when used in a particular manner. The test case is: pthread_once: first time. Please check testsuites/psxtmtests/psxtmtests_plan.csv and make sure this description match that in the spreadsheet file. Also there may be multiple test cases in one test name. The .csv file along with advice from mentors is truth. In some cases a single test name may have multiple timing cases and be listed on two lines in the .csv file. Just be careful. As a hint if there is no dash in the description then this is the only case of interest for that method. If there are multiple methods then test both methods. The test should be created using the test instantiation helper and templates in rtems-testing/rtems-test-templates. This test will be using the template: psxtmtest_single. See https://devel.rtems.org/wiki/GCI/Coding/POSIXTimingTest for more details. The outcome of this task will be a patch to add the new test to RTEMS. || 1 || gedare || C,benchmarking,testing || 0 || 1,4 || 3 || psxtmtest
|| Create POSIX Timing Test psxtmonce02 (13-#2) || This task consists of creating the timing test testsuites/psxtmtests/psxtmonce02 for the POSIX API method when used in a particular manner. The test case is: pthread_once: second time. Please check testsuites/psxtmtests/psxtmtests_plan.csv and make sure this description match that in the spreadsheet file. Also there may be multiple test cases in one test name. The .csv file along with advice from mentors is truth. In some cases a single test name may have multiple timing cases and be listed on two lines in the .csv file. Just be careful. As a hint if there is no dash in the description then this is the only case of interest for that method. If there are multiple methods then test both methods. The test should be created using the test instantiation helper and templates in rtems-testing/rtems-test-templates. This test will be using the template: psxtmtest_single. See https://devel.rtems.org/wiki/GCI/Coding/POSIXTimingTest for more details. The outcome of this task will be a patch to add the new test to RTEMS. || 1 || crempel2 || C,benchmarking,testing || 0 || 1,4 || 3 || psxtmtest
|| Create POSIX Timing Test psxtmmqrcvblock01 (13-#3) || This task consists of creating the timing test testsuites/psxtmtests/psxtmmqrcvblock01 for the POSIX API method when used in a particular manner. The test case is: mq_receive: not available: block. Please check testsuites/psxtmtests/psxtmtests_plan.csv and make sure this description match that in the spreadsheet file. Also there may be multiple test cases in one test name. The .csv file along with advice from mentors is truth. In some cases a single test name may have multiple timing cases and be listed on two lines in the .csv file. Just be careful. As a hint if there is no dash in the description then this is the only case of interest for that method. If there are multiple methods then test both methods. The test should be created using the test instantiation helper and templates in rtems-testing/rtems-test-templates. This test will be using the template: psxtmtest_blocking. See https://devel.rtems.org/wiki/GCI/Coding/POSIXTimingTest for more details. The outcome of this task will be a patch to add the new test to RTEMS. || 1 || hiddenpearls || C,benchmarking,testing || 0 || 1,4 || 3 || psxtmtest
|| Create POSIX Timing Test psxtmmqrcvblock02 (13-#4) || This task consists of creating the timing test testsuites/psxtmtests/psxtmmqrcvblock02 for the POSIX API method when used in a particular manner. The test case is: mq_timedreceive: not available: blocks. Please check testsuites/psxtmtests/psxtmtests_plan.csv and make sure this description match that in the spreadsheet file. Also there may be multiple test cases in one test name. The .csv file along with advice from mentors is truth. In some cases a single test name may have multiple timing cases and be listed on two lines in the .csv file. Just be careful. As a hint if there is no dash in the description then this is the only case of interest for that method. If there are multiple methods then test both methods. The test should be created using the test instantiation helper and templates in rtems-testing/rtems-test-templates. This test will be using the template: psxtmtest_single. See https://devel.rtems.org/wiki/GCI/Coding/POSIXTimingTest for more details. The outcome of this task will be a patch to add the new test to RTEMS. || 1 || vipulnayyar || C,benchmarking,testing || 0 || 1,4 || 3 || psxtmtest
|| Create POSIX Timing Test  (13-#5) || This task consists of creating the timing test testsuites/psxtmtests/ for the POSIX API method when used in a particular manner. The test case is: . Please check testsuites/psxtmtests/psxtmtests_plan.csv and make sure this description match that in the spreadsheet file. Also there may be multiple test cases in one test name. The .csv file along with advice from mentors is truth. In some cases a single test name may have multiple timing cases and be listed on two lines in the .csv file. Just be careful. As a hint if there is no dash in the description then this is the only case of interest for that method. If there are multiple methods then test both methods. The test should be created using the test instantiation helper and templates in rtems-testing/rtems-test-templates. This test will be using the template: . See https://devel.rtems.org/wiki/GCI/Coding/POSIXTimingTest for more details. The outcome of this task will be a patch to add the new test to RTEMS. || 1 || chrisjohns || C,benchmarking,testing || 0 || 1,4 || 3 || psxtmtest
